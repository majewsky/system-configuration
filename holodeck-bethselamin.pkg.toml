[package]
name        = "holodeck-bethselamin"
version     = "1.20.0"
description = "holodeck: services on Bethselamin"

requires = [
    "secrets", # this uses /usr/bin/replicator
    "hologram-base-hetzner",
    "hologram-automation",
    "hologram-ferm",
    "hologram-murmur",
    "hologram-monitoring-client",
    "hologram-consul",
    "linux-headers", # for wireguard-dkms
    "grub",
    # web services
    "hologram-nginx",
    "ages-website",
    "gitea",
    "sqlite", # for gitea
    "todolist",
    "blog-generator",
    "hookserve",
    "vt6-website-build",
    # additional services
    "hologram-bethselamin-synapse",
    "hologram-bethselamin-prosody",
]

################################################################################
# identity

[[file]]
path    = "/etc/hostname"
content = "bethselamin"

[[file]]
path    = "/etc/profile.d/prettyprompt.sh"
content = """
    export PRETTYPROMPT_COMMONUSER=stefan
    export PRETTYPROMPT_HOSTCOLOR='0;31'
"""

################################################################################
# network interface configuration as generated by Hetzner's installimage

[[file]]
path    = "/etc/systemd/network/50-hetzner.network"
content = """
    [Match]
    MACAddress={{.Vars.bethselamin.mac_address}}

    [Network]
    Address={{.Vars.bethselamin.ipv6_address}}/64
    Gateway=fe80::1

    Address=172.31.1.100/24
    Gateway=172.31.1.1
"""
[[symlink]]
path   = "/usr/share/holo/files/50-bethselamin-vars/etc/systemd/network/50-hetzner.network.holoscript"
target = "/usr/bin/replicator"

################################################################################
# web services: gitea

[[user]]
name = "git"
# user git already comes from the git package, but with home = "/"
home = "/home/git"

[[directory]]
path  = "/home/git"
mode  = "0700"
user  = "git"
group = "git"

[[file]]
path    = "/usr/share/holo/files/50-bethselamin/etc/gitea/app.ini"
content = '''
    APP_NAME = Bethselamin
    RUN_USER = git
    RUN_MODE = prod

    [markdown]
    FILE_EXTENSIONS = .md,.markdown,.mdown,.mkd

    [repository]
    ROOT        = /data/gitea/repo
    SCRIPT_TYPE = bash
    MIRROR_QUEUE_LENGTH = 1000
    PULL_REQUEST_QUEUE_LENGTH = 1000

    [repository.editor]
    LINE_WRAP_EXTENSIONS = .txt,.md,.markdown,.mdown,.mkd,
    PREVIEWABLE_FILE_MODES = markdown

    [repository.upload]
    ENABLED = false

    [server]
    PROTOCOL   = http
    DOMAIN     = git.bethselamin.de
    ROOT_URL   = https://git.bethselamin.de/
    HTTP_ADDR  =
    HTTP_PORT  = 3000
    SSH_DOMAIN = git.bethselamin.de
    SSH_PORT   = 22
    SSH_LISTEN_PORT  = 22
    APP_DATA_PATH    = /data/gitea

    [ssh.minimum_key_sizes]
    ; reject insecure keys
    DSA     = -1
    ECDSA   = -1
    ED25519 = 256
    RSA     = 4096

    [database]
    DB_TYPE = sqlite3
    PATH    = /data/gitea/sqlite.db

    [security]
    INSTALL_LOCK         = true
    SECRET_KEY           = %SECRET%
    LOGIN_REMEMBER_DAYS  = 1
    COOKIE_USERNAME      = gitea_user
    COOKIE_REMEMBER_NAME = gitea_remember
    INTERNAL_TOKEN       = %INTERNAL_TOKEN%

    [service]
    DISABLE_REGISTRATION = true
    REQUIRE_SIGNIN_VIEW  = true
    ENABLE_NOTIFY_MAIL   = false

    [mailer]
    ENABLED = false

    [cache]
    ADAPTER = memory

    [session]
    PROVIDER = memory

    [picture]
    AVATAR_UPLOAD_PATH = /data/gitea/avatars
    DISABLE_GRAVATAR = true

    [attachment]
    ENABLE = true
    PATH = /data/gitea/attachments
    ALLOWED_TYPES = image/jpeg|image/png

    [log]
    ; this should not be required with MODE=console, but is needed apparently because Gogs is stupid enough to choose /usr/share/gogs/log without hand-holding
    ROOT_PATH = /var/log/gitea
    MODE = console
    LEVEL = Info

    [cron]
    ENABLED = true
    RUN_AT_START = false

    [cron.update_mirrors]
    SCHEDULE = @every 1h

    [cron.repo_health_check]
    SCHEDULE = @every 24h
    TIMEOUT = 60s

    [cron.check_repo_stats]
    RUN_AT_START = true
    SCHEDULE = @every 24h

    [git]
    MAX_GIT_DIFF_LINES = 10000
    MAX_GIT_DIFF_LINE_CHARACTERS = 500
    MAX_GIT_DIFF_FILES = 100

    [git.timeout]
    MIGRATE = 600
    MIRROR  = 300
    CLONE   = 300
    PULL    = 300

    [i18n]
    LANGS = en-US,de-DE
    NAMES = English,Deutsch

    [i18n.datelang]
    en-US = en
    de-DE = de

    [other]
    SHOW_FOOTER_BRANDING = false
    SHOW_FOOTER_VERSION  = false

    [api]
    MAX_RESPONSE_ITEMS = 50
'''

[[file]]
path    = "/usr/share/holo/files/50-bethselamin/etc/gitea/app.ini.holoscript"
mode    = "0755"
content = '''
    #!/bin/sh
    set -e
    mkdir -p /var/lib/gitea
    test -f /var/lib/gitea/internal-token || touch /var/lib/gitea/internal-token
    test -f /var/lib/gitea/secret || pwgen 20 1 > /var/lib/gitea/secret
    sed s/%SECRET%/"$(cat /var/lib/gitea/secret)"/\;s/%INTERNAL_TOKEN%/"$(cat /var/lib/gitea/internal-token)"/
'''

[[directory]]
path = "/data/gitea"
user = "git"
group = "git"
mode = "0770" # group-readable for backup user

[[file]]
path    = "/usr/share/holo/files/50-bethselamin/usr/lib/systemd/system/gitea.service.holoscript"
mode    = "0755"
content = '''
    #!/bin/sh
    sed s+/var/lib/gitea+/data/gitea+g
'''

[[symlink]]
path   = "/etc/systemd/system/multi-user.target.wants/gitea.service"
target = "/usr/lib/systemd/system/gitea.service"

[[file]]
path    = "/etc/nginx/sites-enabled/gitea.conf"
content = '''
    server {
        server_name git.bethselamin.de;
        include     /etc/nginx/server-baseline-https.inc;

        add_header  Content-Security-Policy "default-src 'self'" always;

        ssl_certificate     /etc/letsencrypt/live/git.bethselamin.de/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/git.bethselamin.de/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/git.bethselamin.de/chain.pem;

        client_max_body_size 10m;

        location / {
            proxy_pass http://localhost:3000;
        }
    }
'''

################################################################################
# backup for /data

# TODO: move /var/lib/prosody to /data to be included in backup

[[user]]
name  = "backup"
group = "git"
groups = ["prosody", "synapse", "grafana"]
home  = "/var/lib/backupuser"

[[file]]
path    = "/usr/share/holo/ssh-keys/backup/damogran.pub"
content = """
    ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDIG9MGVFKSc73k4RF3eyYPojbRIdGcPQLgN1t0NcWW4iXpzyBSevE/C4YUpjgxghZmO1VtQa0VQPFy3TDCUUMp8MKVI/WmmFQprVtwAMVGUDpNt7TEcBZXzTCA+GiSMhcA4y3xme5BJy0r9oKtmQAhVIQKO0jYye4cdPVsYmRVMZba4JWlNVJZRIMVjwg98NdvLbqjVgph+es5EYh8uluvCzDvoC1RuTNljAVyUjmdOHe3nWBE3N4EMCnp/XnYigtbcwSpSq2oJ2Yu1B9E5sk3rjgDv5inmF3eykLLDkE85fusvRAcHkirbKQuUg2x0vm8FHy3U1TnX3wizdfIBE8bkpJAMcEBoY8cIEL45od+7lS3R4S3KOwWwzE5reYv4WjPcGbNuYls9sHS72wDDNr3N6SgTTDJJRWRfo3QiVZV8DYaHVOJJYAGL6OUfRAAT3+1QGY5x8zQeVayjeqAQ89ukyRtkgYECyHZYVDkmqw+t/OwElyHNuWm6tn1s/TGVdd9XBrrHwwxPY+DuquND7zaqkDSc491DsCE/7LT81DOfzcpraZAE9RBB2P05FpbvOLHXxhiCigTBKmo5GZ1WUEesYj9X/RTA6rPB5NlOw8BxU8EIfQI1/KfumNSIR02GhueG7t0647GekUARlwpk/YMNftRpqjlPRCRoTNxvDRh/Q== bethselaminbackup@damogran
"""

################################################################################
# web services: repo.holocm.org

[[directory]]
path  = "/data/static-web/repo.holocm.org"
owner = "stefan"
group = "users"
# this tree is world-readable for the nginx and backup users
mode  = "0755"

# nginx configuration is generated by sites-enabled/static-web.conf in hologram-nginx

################################################################################
# web services: todolist

[[file]]
path    = "/etc/nginx/sites-enabled/todolist.conf"
content = '''
    server {
        server_name todolist.bethselamin.de;
        include     /etc/nginx/server-baseline-https.inc;

        add_header  Content-Security-Policy "default-src 'self' 'unsafe-inline'" always; # unsafe-inline for <style> tag to work

        ssl_certificate     /etc/letsencrypt/live/todolist.bethselamin.de/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/todolist.bethselamin.de/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/todolist.bethselamin.de/chain.pem;

        location / {
            proxy_pass http://localhost:8113;
            proxy_set_header Authorization $http_authorization;
            proxy_pass_header Authorization;
        }
    }

'''

[[group]]
name   = "todolist"
system = true

[[user]]
name   = "todolist"
group  = "todolist"
system = true
home   = "/var/lib/todolist"

[[directory]]
path  = "/var/lib/todolist"
owner = "todolist"
group = "todolist"

[[file]]
path    = "/usr/lib/systemd/system/todolist.service"
content = """
    [Unit]
    Description=Minimalistic web-based todolist app

    [Service]
    ExecStart=/usr/bin/todolist -port 8113
    WorkingDirectory=/var/lib/todolist
    User=todolist

    [Install]
    WantedBy=multi-user.target
"""

[[symlink]]
path   = "/etc/systemd/system/multi-user.target.wants/todolist.service"
target = "/usr/lib/systemd/system/todolist.service"

################################################################################
# web services: ages-skripte.org

[[symlink]]
path   = "/data/static-web/ages-skripte.org"
target = "/usr/share/ages-website"

[[symlink]]
path   = "/data/static-web/www.ages-skripte.org"
target = "/usr/share/ages-website"

################################################################################
# web services: blog.bethselamin.de and vt6.io

[[user]]
name   = "blog"
group  = "nobody"
home   = "/data/blog"
system = true

[[directory]]
path  = "/data/blog"
owner = "blog"
group = "nobody"

[[directory]]
path  = "/data/blog/output"
owner = "blog"
group = "nobody"

[[symlink]]
path   = "/data/static-web/blog.bethselamin.de"
target = "/data/blog/output"

[[file]]
path = "/etc/blog-generator.conf"
content = '''
    source-dir /data/blog/data
    source-url https://github.com/majewsky/blog-data
    target-dir /data/blog/output
    target-url https://blog.bethselamin.de
    page-name Stefan's Blog
    page-desc Personal blog of Stefan Majewsky
'''

[[file]]
path    = "/usr/lib/blog-update.sh"
mode    = "0755"
content = '''
    #!/bin/bash
    set -euo pipefail
    cd /data/blog
    if [ -d data ]; then
        git -C data pull -q origin master
    else
        git clone https://github.com/majewsky/blog-data data
    fi
    blog-generator /etc/blog-generator.conf
    rsync -au --delete-delay /data/blog/data/assets/ /data/blog/output/assets/
'''

[[file]]
path = "/usr/lib/systemd/system/blog-update.service"
content = '''
    [Unit]
    Description=Update blog.bethselamin.de

    [Service]
    Type=oneshot
    ExecStart=/usr/lib/blog-update.sh
    User=blog
    Group=nobody
'''

[[directory]]
path  = "/data/vt6"
owner = "blog"
group = "nobody"

[[directory]]
path  = "/data/vt6/output"
owner = "blog"
group = "nobody"

[[symlink]]
path   = "/data/static-web/vt6.io"
target = "/data/vt6/output"

[[file]]
path    = "/usr/lib/vt6-update.sh"
mode    = "0755"
content = '''
    #!/bin/bash
    set -euo pipefail
    cd /data/vt6
    if [ -d data ]; then
        git -C data pull -q origin master
    else
        git clone https://github.com/vt6/vt6 data
    fi
    git -C /data/vt6/data clean -dxf .
    rm -rf -- /data/vt6/output.tmp/
    vt6-website-build /data/vt6/data /data/vt6/output.tmp
    rsync -au --delete-delay /data/vt6/output.tmp/ /data/vt6/output/
'''

[[file]]
path = "/usr/lib/systemd/system/vt6-update.service"
content = '''
    [Unit]
    Description=Update vt6.io

    [Service]
    Type=oneshot
    # note: need to drop privileges with sudo(1) because with-xmpp-bridge(1) requires root privileges to load credentials
    ExecStart=/usr/bin/with-xmpp-bridge sudo -u blog -g nobody /usr/lib/vt6-update.sh
'''

[[file]]
path    = "/etc/nginx/sites-enabled/www-vt6-io.conf"
content = '''
    server {
        server_name www.vt6.io;
        include     /etc/nginx/server-baseline-https.inc;

        add_header  Content-Security-Policy "default-src 'self'" always;

        ssl_certificate     /etc/letsencrypt/live/www.vt6.io/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/www.vt6.io/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/www.vt6.io/chain.pem;

        location / {
            return 301 https://vt6.io$request_uri;
        }
    }
'''


################################################################################
# web services: hook.bethselamin.de

[[file]]
path    = "/etc/nginx/sites-enabled/hook.conf"
content = '''
    server {
        server_name hook.bethselamin.de;
        include     /etc/nginx/server-baseline-https.inc;

        add_header  Content-Security-Policy "default-src 'self' 'unsafe-inline'" always; # unsafe-inline for <style> tag to work

        ssl_certificate     /etc/letsencrypt/live/hook.bethselamin.de/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/hook.bethselamin.de/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/hook.bethselamin.de/chain.pem;

        location / {
            proxy_pass http://localhost:8114;
        }
    }
'''

[[file]]
path = "/usr/lib/bethselamin/hookserve.sh"
mode = "0755"
contentFrom = "src/bethselamin-hookserve.sh"

[[file]]
path    = "/usr/lib/systemd/system/hookserve.service"
content = '''
    [Unit]
    Description=React to Github events pushed to hook.bethselamin.de

    [Service]
    ExecStart=/usr/bin/hookserve --port=8114 --secret={{.Vars.hookserve.secret}} /usr/lib/bethselamin/hookserve.sh

    [Install]
    WantedBy=multi-user.target
'''
[[symlink]]
path   = "/usr/share/holo/files/50-bethselamin-vars/usr/lib/systemd/system/hookserve.service.holoscript"
target = "/usr/bin/replicator"

[[symlink]]
path   = "/etc/systemd/system/multi-user.target.wants/hookserve.service"
target = "/usr/lib/systemd/system/hookserve.service"
