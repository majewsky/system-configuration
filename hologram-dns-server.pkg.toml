[package]
name        = "hologram-dns-server"
version     = "1.1.0"
description = "Authoritative DNS server using CoreDNS"
requires    = [
  "coredns",
  "secrets", # this uses /usr/bin/replicator
]

# open port when using hologram-ferm
[[file]]
path = "/etc/ferm.d/incoming-dns"
content = '''
  proto (tcp udp) dport 53 ACCEPT;
  proto tcp dport 9153 interface wg-monitoring ACCEPT;
'''

# enable CoreDNS (NOTE: 217.70.177.40 is the secondary nameserver provided by Gandi)
[[file]]
path    = "/etc/coredns/Corefile"
owner   = "coredns"
group   = "coredns"
content = '''
  {{- range $zone, $content := .Vars.dnszones }}
    {{$zone}} {
      file /etc/coredns/{{$zone}}.signed {
        transfer to 217.70.177.40
      }
      prometheus {{$.Vars.prometheus.slash24}}.{{$.Vars.host.id}}:9153
      errors
    }
  {{- end }}
'''
[[symlink]]
path   = "/usr/share/holo/files/20-dns-server/etc/coredns/Corefile.holoscript"
target = "/usr/bin/replicator"

[[symlink]]
path   = "/etc/systemd/system/multi-user.target.wants/coredns.service"
target = "/usr/lib/systemd/system/coredns.service"

# zonefiles are delivered via secrets
[[file]]
path    = "/usr/share/holo/run-scripts/20-dns-unpack-zones.sh"
mode    = "0755"
content = '''
  #!/bin/bash
  set -euo pipefail
  rm -f -- /etc/coredns/*.signed
  grep -o '/etc/coredns/.*\.signed' /etc/coredns/Corefile | while read ZONEFILE; do
    DOMAIN="${ZONEFILE##*/}"
    DOMAIN="${DOMAIN%.signed}"
    echo "{{index .Vars.dnszones \"${DOMAIN}\"}}" | replicator > "${ZONEFILE}"
    chown coredns:coredns "${ZONEFILE}"
    chmod 0440 "${ZONEFILE}"
  done
'''

# advertise Prometheus endpoint
[[file]]
path    = "/etc/consul.d/coredns.json"
content = '''
{
  "service": {
    "name": "coredns",
    "port": 9153,
    "tags": [ "prometheus" ],
    "meta": {}
  }
}
'''
