[package]
name        = "hologram-monitoring-server"
version     = "0.3.2"
description = "hologram: monitoring server using Prometheus, Grafana"

requires = [
  'hologram-monitoring-agents',
  'hologram-nginx',
  'grafana',
  'prometheus',
  'wireguard-dkms',
  'wireguard-tools',
]

[[directory]]
path = "/etc/wireguard"
mode = "0700" # contains private keys

# open port when using hologram-ferm
[[file]]
path    = "/etc/ferm.d/incoming-wireguard"
content = "proto udp dport {{.Vars.wg.port}} ACCEPT;"
[[symlink]]
path   = "/usr/share/holo/files/20-monitoring-server/etc/ferm.d/incoming-wireguard.holoscript"
target = "/usr/bin/replicator"

################################################################################
# private network for metric collection/Grafana access

[[file]]
path = "/etc/wireguard/wg-monitoring.conf"
content = '''
  [Interface]
  Address = {{.Vars.prometheus.slash24}}.{{.Vars.host.id}}/32
  PrivateKey = {{.Vars.wg.private_key}}
  ListenPort = {{.Vars.wg.port}}

  {{range $hostname, $cfg := .Vars.wg.peers}}
  {{- if ne $hostname $.Vars.host.name}}
  [Peer]
  PublicKey = {{$cfg.public_key}}
  PresharedKey = {{$.Vars.wg.preshared_key}}
  AllowedIPs = {{$.Vars.prometheus.slash24}}.{{$cfg.machine_id}}/32

  {{- end}}
  {{- end}}
'''
[[symlink]]
path   = "/usr/share/holo/files/20-monitoring-server/etc/wireguard/wg-monitoring.conf.holoscript"
target = "/usr/bin/replicator"

[[symlink]]
path   = "/etc/systemd/system/multi-user.target.wants/wg-quick@wg-monitoring.service"
target = "/usr/lib/systemd/system/wg-quick@.service"

################################################################################
# Prometheus server

[[file]]
path        = "/usr/share/holo/files/20-monitoring-server/etc/prometheus/prometheus.yml"
contentFrom = "src/prometheus.yaml"
[[symlink]]
path   = "/usr/share/holo/files/20-monitoring-server/etc/prometheus/prometheus.yml.holoscript"
target = "/usr/bin/replicator"

[[file]]
path    = "/usr/share/holo/files/20-monitoring-server/usr/lib/systemd/system/prometheus.service.holoscript"
mode    = "0755"
content = '''
  #!/bin/bash
  PROM_LISTEN_ADDRESS="$(echo ':{{.Vars.prometheus.http_port}}' | replicator)"

  sed "/ExecStart=/s,\$, --web.listen-address=${PROM_LISTEN_ADDRESS} --storage.tsdb.retention=14d,"
'''

[[symlink]]
path = "/etc/systemd/system/multi-user.target.wants/prometheus.service"
target = "/usr/lib/systemd/system/prometheus.service"

# allow access to Prometheus only from private network
[[file]]
path    = "/etc/ferm.d/incoming-prometheus"
content = "proto tcp dport {{.Vars.prometheus.http_port}} interface wg-monitoring ACCEPT;"
[[symlink]]
path   = "/usr/share/holo/files/20-monitoring-server/etc/ferm.d/incoming-prometheus.holoscript"
target = "/usr/bin/replicator"

################################################################################
# Grafana dashboard

[[file]]
path        = "/usr/share/holo/files/20-monitoring-server/etc/grafana.ini"
contentFrom = "src/grafana.ini"
[[symlink]]
path   = "/usr/share/holo/files/20-monitoring-server/etc/grafana.ini.holoscript"
target = "/usr/bin/replicator"

[[symlink]]
path = "/etc/systemd/system/multi-user.target.wants/grafana.service"
target = "/usr/lib/systemd/system/grafana.service"

[[directory]]
path  = "/data/grafana"
mode  = "0770"
owner = "grafana"
group = "grafana"

[[file]]
path    = "/etc/nginx/sites-enabled/grafana.conf"
content = '''
    server {
        server_name {{.Vars.grafana.domain}};
        include     /etc/nginx/server-baseline-https.inc;

        add_header  Content-Security-Policy "default-src 'self' 'unsafe-eval' 'unsafe-inline'" always;

        ssl_certificate     /etc/letsencrypt/live/{{.Vars.grafana.domain}}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/{{.Vars.grafana.domain}}/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/{{.Vars.grafana.domain}}/chain.pem;

        location / {
            proxy_pass http://localhost:{{.Vars.grafana.internalPort}};
        }
    }
'''
[[symlink]]
path   = "/usr/share/holo/files/20-monitoring-server/etc/nginx/sites-enabled/grafana.conf.holoscript"
target = "/usr/bin/replicator"
